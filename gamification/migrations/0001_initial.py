# Generated by Django 5.1.7 on 2025-03-10 18:04

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('challenges', '0001_initial'),
        ('events', '0001_initial'),
        ('learning', '0001_initial'),
        ('teams', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(verbose_name='description')),
                ('icon', models.ImageField(upload_to='badge_icons/', verbose_name='icon')),
                ('badge_type', models.CharField(choices=[('achievement', 'Achievement'), ('skill', 'Skill'), ('participation', 'Participation'), ('contribution', 'Contribution'), ('special', 'Special')], max_length=20, verbose_name='badge type')),
                ('level', models.CharField(choices=[('bronze', 'Bronze'), ('silver', 'Silver'), ('gold', 'Gold'), ('platinum', 'Platinum')], default='bronze', max_length=20, verbose_name='level')),
                ('points', models.PositiveIntegerField(default=0, verbose_name='points')),
                ('requirement', models.TextField(blank=True, verbose_name='requirement')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='is hidden')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
            ],
            options={
                'verbose_name': 'badge',
                'verbose_name_plural': 'badges',
                'ordering': ['badge_type', 'level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('leaderboard_type', models.CharField(choices=[('global', 'Global'), ('challenge', 'Challenge'), ('course', 'Course'), ('event', 'Event'), ('team', 'Team')], max_length=20, verbose_name='leaderboard type')),
                ('time_period', models.CharField(choices=[('all_time', 'All Time'), ('yearly', 'Yearly'), ('monthly', 'Monthly'), ('weekly', 'Weekly'), ('daily', 'Daily')], default='all_time', max_length=20, verbose_name='time period')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('challenge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leaderboards', to='challenges.challenge')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leaderboards', to='learning.course')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leaderboards', to='events.event')),
            ],
            options={
                'verbose_name': 'leaderboard',
                'verbose_name_plural': 'leaderboards',
                'ordering': ['leaderboard_type', 'time_period', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('points', models.IntegerField(verbose_name='points')),
                ('score_type', models.CharField(choices=[('challenge', 'Challenge'), ('quiz', 'Quiz'), ('contribution', 'Contribution'), ('event', 'Event'), ('bonus', 'Bonus')], max_length=20, verbose_name='score type')),
                ('description', models.CharField(max_length=255, verbose_name='description')),
                ('earned_at', models.DateTimeField(auto_now_add=True, verbose_name='earned at')),
                ('challenge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scores', to='challenges.challenge')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scores', to='events.event')),
                ('quiz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scores', to='learning.quiz')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='teams.team')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'score',
                'verbose_name_plural': 'scores',
                'ordering': ['-earned_at'],
            },
        ),
        migrations.CreateModel(
            name='ScoreHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('points', models.IntegerField(verbose_name='points')),
                ('cumulative_points', models.IntegerField(verbose_name='cumulative points')),
                ('recorded_at', models.DateTimeField(auto_now_add=True, verbose_name='recorded at')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='score_history', to='teams.team')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='score_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'score history',
                'verbose_name_plural': 'score histories',
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('earned_at', models.DateTimeField(auto_now_add=True, verbose_name='earned at')),
                ('points', models.PositiveIntegerField(default=0, verbose_name='points')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='gamification.badge')),
            ],
            options={
                'verbose_name': 'achievement',
                'verbose_name_plural': 'achievements',
                'ordering': ['-earned_at'],
                'unique_together': {('user', 'badge')},
            },
        ),
    ]

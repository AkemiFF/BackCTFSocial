# Generated by Django 5.0.4 on 2025-03-22 14:30

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('teams', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('event_type', models.CharField(choices=[('ctf', 'Capture The Flag'), ('workshop', 'Workshop'), ('webinar', 'Webinar'), ('hackathon', 'Hackathon'), ('meetup', 'Meetup'), ('conference', 'Conference')], max_length=20, verbose_name='event type')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('registration_open', 'Registration Open'), ('registration_closed', 'Registration Closed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20, verbose_name='status')),
                ('start_date', models.DateTimeField(verbose_name='start date')),
                ('end_date', models.DateTimeField(verbose_name='end date')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='location')),
                ('is_virtual', models.BooleanField(default=False, verbose_name='is virtual')),
                ('virtual_url', models.URLField(blank=True, verbose_name='virtual URL')),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True, verbose_name='maximum participants')),
                ('registration_deadline', models.DateTimeField(blank=True, null=True, verbose_name='registration deadline')),
                ('image', models.ImageField(blank=True, null=True, upload_to='event_images/', verbose_name='image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('requires_subscription', models.BooleanField(default=False, verbose_name='requires subscription')),
                ('organizer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organized_events', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='events', to='accounts.tag')),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='CTFEvent',
            fields=[
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='ctf_details', serialize=False, to='events.event')),
                ('format', models.CharField(choices=[('jeopardy', 'Jeopardy'), ('attack_defense', 'Attack-Defense'), ('king_of_the_hill', 'King of the Hill'), ('mixed', 'Mixed')], default='jeopardy', max_length=20, verbose_name='format')),
                ('prize_pool', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='prize pool')),
                ('team_size', models.PositiveIntegerField(default=1, verbose_name='team size')),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='intermediate', max_length=20, verbose_name='difficulty')),
                ('has_dynamic_scoring', models.BooleanField(default=False, verbose_name='has dynamic scoring')),
                ('scoreboard_visible', models.BooleanField(default=True, verbose_name='scoreboard visible')),
            ],
            options={
                'verbose_name': 'CTF event',
                'verbose_name_plural': 'CTF events',
            },
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='workshop_details', serialize=False, to='events.event')),
                ('prerequisites', models.TextField(blank=True, verbose_name='prerequisites')),
                ('materials', models.TextField(blank=True, verbose_name='materials')),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='intermediate', max_length=20, verbose_name='difficulty')),
                ('has_certificate', models.BooleanField(default=False, verbose_name='has certificate')),
                ('instructor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workshops_as_instructor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'workshop',
                'verbose_name_plural': 'workshops',
            },
        ),
        migrations.CreateModel(
            name='EventFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], verbose_name='rating')),
                ('comment', models.TextField(blank=True, verbose_name='comment')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, verbose_name='submitted at')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_feedback', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'event feedback',
                'verbose_name_plural': 'event feedback',
                'ordering': ['-submitted_at'],
                'unique_together': {('event', 'user')},
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='registration date')),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('confirmed', 'Confirmed'), ('attended', 'Attended'), ('cancelled', 'Cancelled'), ('waitlisted', 'Waitlisted')], default='registered', max_length=20, verbose_name='status')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('check_in_time', models.DateTimeField(blank=True, null=True, verbose_name='check-in time')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='events.event')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_registrations', to='teams.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_registrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'event registration',
                'verbose_name_plural': 'event registrations',
                'ordering': ['registration_date'],
                'unique_together': {('event', 'user')},
            },
        ),
    ]

# Generated by Django 5.0.4 on 2025-03-22 14:30

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_group', models.BooleanField(default=False, verbose_name='is group')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('participants', models.ManyToManyField(related_name='conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'conversation',
                'verbose_name_plural': 'conversations',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('file', 'File'), ('code', 'Code')], default='text', max_length=20, verbose_name='message type')),
                ('content', models.TextField(verbose_name='content')),
                ('image', models.ImageField(blank=True, null=True, upload_to='message_images/', verbose_name='image')),
                ('file', models.FileField(blank=True, null=True, upload_to='message_files/', verbose_name='file')),
                ('code_snippet', models.TextField(blank=True, verbose_name='code snippet')),
                ('code_language', models.CharField(blank=True, max_length=50, verbose_name='code language')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('is_read', models.BooleanField(default=False, verbose_name='is read')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='social.conversation')),
                ('read_by', models.ManyToManyField(blank=True, related_name='read_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'message',
                'verbose_name_plural': 'messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(verbose_name='content')),
                ('post_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('link', 'Link'), ('code', 'Code'), ('project', 'Project')], default='text', max_length=20, verbose_name='post type')),
                ('image', models.ImageField(blank=True, null=True, upload_to='post_images/', verbose_name='image')),
                ('code_snippet', models.TextField(blank=True, verbose_name='code snippet')),
                ('code_language', models.CharField(blank=True, max_length=50, verbose_name='code language')),
                ('link_url', models.URLField(blank=True, verbose_name='link URL')),
                ('link_title', models.CharField(blank=True, max_length=255, verbose_name='link title')),
                ('link_description', models.TextField(blank=True, verbose_name='link description')),
                ('link_image', models.URLField(blank=True, verbose_name='link image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_edited', models.BooleanField(default=False, verbose_name='is edited')),
                ('is_pinned', models.BooleanField(default=False, verbose_name='is pinned')),
                ('is_public', models.BooleanField(default=True, verbose_name='is public')),
                ('mentions', models.ManyToManyField(blank=True, related_name='mentioned_in_posts', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='posts', to='accounts.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'post',
                'verbose_name_plural': 'posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(verbose_name='content')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_edited', models.BooleanField(default=False, verbose_name='is edited')),
                ('mentions', models.ManyToManyField(blank=True, related_name='mentioned_in_comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='social.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='social.post')),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='project_images/', verbose_name='image')),
                ('repository_url', models.URLField(blank=True, verbose_name='repository URL')),
                ('demo_url', models.URLField(blank=True, verbose_name='demo URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_public', models.BooleanField(default=True, verbose_name='is public')),
                ('technologies', models.ManyToManyField(blank=True, related_name='projects', to='accounts.skill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'project',
                'verbose_name_plural': 'projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialInteraction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('interaction_type', models.CharField(choices=[('like', 'Like'), ('share', 'Share'), ('save', 'Save'), ('report', 'Report')], max_length=20, verbose_name='interaction type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='social.comment')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='social.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_interactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'social interaction',
                'verbose_name_plural': 'social interactions',
                'unique_together': {('user', 'comment', 'interaction_type'), ('user', 'post', 'interaction_type')},
            },
        ),
    ]

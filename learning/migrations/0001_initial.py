# Generated by Django 5.1.7 on 2025-03-10 18:04

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_text', models.TextField(verbose_name='question text')),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('short_answer', 'Short Answer'), ('code', 'Code')], max_length=20, verbose_name='question type')),
                ('code_snippet', models.TextField(blank=True, verbose_name='code snippet')),
                ('explanation', models.TextField(blank=True, verbose_name='explanation')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('points', models.PositiveIntegerField(default=1, verbose_name='points')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'question',
                'verbose_name_plural': 'questions',
                'ordering': ['quiz', 'order'],
            },
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='slug')),
                ('image', models.ImageField(blank=True, null=True, upload_to='learning_paths/', verbose_name='image')),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20, verbose_name='difficulty')),
                ('estimated_hours', models.PositiveIntegerField(default=0, verbose_name='estimated hours')),
                ('is_published', models.BooleanField(default=False, verbose_name='is published')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_paths', to=settings.AUTH_USER_MODEL)),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='required_for', to='learning.learningpath')),
                ('tags', models.ManyToManyField(blank=True, related_name='learning_paths', to='core.tag')),
            ],
            options={
                'verbose_name': 'learning path',
                'verbose_name_plural': 'learning paths',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='slug')),
                ('image', models.ImageField(blank=True, null=True, upload_to='courses/', verbose_name='image')),
                ('order_in_path', models.PositiveIntegerField(default=0, verbose_name='order in path')),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20, verbose_name='difficulty')),
                ('estimated_hours', models.PositiveIntegerField(default=0, verbose_name='estimated hours')),
                ('is_published', models.BooleanField(default=False, verbose_name='is published')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('requires_subscription', models.BooleanField(default=False, verbose_name='requires subscription')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_courses', to=settings.AUTH_USER_MODEL)),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='required_for', to='learning.course')),
                ('tags', models.ManyToManyField(blank=True, related_name='courses', to='core.tag')),
                ('learning_path', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='learning.learningpath')),
            ],
            options={
                'verbose_name': 'course',
                'verbose_name_plural': 'courses',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('content', models.TextField(verbose_name='content')),
                ('estimated_minutes', models.PositiveIntegerField(default=0, verbose_name='estimated minutes')),
                ('is_published', models.BooleanField(default=False, verbose_name='is published')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='learning.course')),
            ],
            options={
                'verbose_name': 'module',
                'verbose_name_plural': 'modules',
                'ordering': ['course', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('answer_text', models.TextField(verbose_name='answer text')),
                ('is_correct', models.BooleanField(default=False, verbose_name='is correct')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='learning.question')),
            ],
            options={
                'verbose_name': 'answer',
                'verbose_name_plural': 'answers',
                'ordering': ['question', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('passing_score', models.PositiveIntegerField(default=70, verbose_name='passing score')),
                ('time_limit_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='time limit (minutes)')),
                ('is_published', models.BooleanField(default=False, verbose_name='is published')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='learning.module')),
            ],
            options={
                'verbose_name': 'quiz',
                'verbose_name_plural': 'quizzes',
                'ordering': ['module', 'order'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='learning.quiz'),
        ),
        migrations.CreateModel(
            name='UserQuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(verbose_name='score')),
                ('passed', models.BooleanField(verbose_name='passed')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='started at')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='completed at')),
                ('time_spent_seconds', models.PositiveIntegerField(default=0, verbose_name='time spent (seconds)')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_attempts', to='learning.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user quiz attempt',
                'verbose_name_plural': 'user quiz attempts',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='UserCourseProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='started at')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='last activity')),
                ('is_completed', models.BooleanField(default=False, verbose_name='is completed')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='completed at')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='learning.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user course progress',
                'verbose_name_plural': 'user course progress',
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.CreateModel(
            name='UserModuleProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='started at')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='last activity')),
                ('is_completed', models.BooleanField(default=False, verbose_name='is completed')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='completed at')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='learning.module')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user module progress',
                'verbose_name_plural': 'user module progress',
                'unique_together': {('user', 'module')},
            },
        ),
    ]

# Generated by Django 5.0.4 on 2025-03-22 14:17

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('difficulty', models.CharField(choices=[('easy', 'Facile'), ('medium', 'Moyen'), ('hard', 'Difficile')], max_length=20, verbose_name='difficulty')),
                ('description', models.TextField(verbose_name='description')),
                ('points', models.PositiveIntegerField(verbose_name='points')),
                ('docker_image', models.CharField(max_length=255, verbose_name='docker image')),
                ('docker_ports', models.JSONField(default=dict, verbose_name='ports')),
                ('environment_vars', models.JSONField(default=dict, verbose_name='environment')),
                ('startup_command', models.CharField(blank=True, max_length=255, verbose_name='start command')),
                ('static_flag', models.CharField(blank=True, max_length=255, verbose_name='static flag')),
                ('flag_generation_script', models.TextField(blank=True, verbose_name='flag script')),
                ('validation_script', models.TextField(blank=True, verbose_name='validation script')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('dockerfile', models.TextField(blank=True, verbose_name='dockerfile')),
                ('docker_context', models.JSONField(default=dict, verbose_name='contexte Docker')),
                ('built_image', models.CharField(blank=True, max_length=255, verbose_name='image construite')),
            ],
            options={
                'ordering': ['difficulty', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ChallengeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
                ('slug', models.SlugField(unique=True)),
                ('validation_type', models.CharField(choices=[('static', 'Flag statique'), ('command', 'Sortie de commande'), ('file_hash', 'Hash de fichier')], max_length=20)),
                ('icon', models.CharField(default='terminal', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('challenges', models.ManyToManyField(to='ctf.challenge')),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_flag', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('submission_time', models.DateTimeField(auto_now_add=True)),
                ('logs', models.TextField(blank=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ctf.challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submission_time'],
            },
        ),
        migrations.AddField(
            model_name='challenge',
            name='challenge_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ctf.challengetype'),
        ),
        migrations.CreateModel(
            name='DockerConfigTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dockerfile', models.TextField(verbose_name='dockerfile')),
                ('default_ports', models.JSONField(default=list)),
                ('common_commands', models.JSONField(default=list)),
                ('challenge_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ctf.challengetype')),
            ],
            options={
                'verbose_name': 'Docker Template',
            },
        ),
        migrations.CreateModel(
            name='UserChallengeInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('container_id', models.CharField(max_length=64, verbose_name='container ID')),
                ('assigned_ports', models.JSONField(default=dict, verbose_name='ports assignés')),
                ('ssh_credentials', models.JSONField(blank=True, null=True, verbose_name='accès SSH')),
                ('web_url', models.URLField(blank=True, verbose_name='URL web')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('expiry_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('running', 'En cours'), ('stopped', 'Arrêté'), ('expired', 'Expiré')], default='running', max_length=20)),
                ('unique_flag', models.CharField(blank=True, max_length=255)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ctf.challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'challenge')},
            },
        ),
        migrations.CreateModel(
            name='SSHKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_key', models.TextField()),
                ('public_key', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_instance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ctf.userchallengeinstance')),
            ],
        ),
    ]
